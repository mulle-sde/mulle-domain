#! /bin/sh

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"

###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###
MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions libexec-dir`" || exit 1
export MULLE_BASHFUNCTIONS_LIBEXEC_DIR
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-boot.sh" || exit 1
. "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1
###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###   ###


run_mulle_domain()
{
   log_fluff "####################################"
   log_fluff ${MULLE_DOMAIN} ${MULLE_DOMAIN_FLAGS} "$@"
   log_fluff "####################################"

   exekutor ${MULLE_DOMAIN} ${MULLE_DOMAIN_FLAGS} "$@"
}


expect_output()
{
   local output="$1"
   local expected="$2"

   if exekutor [ "${output}" != "${expected}" ]
   then
      exekutor fail "Expected \"${expected}\" but got \"${output}\""
   fi
}


run_test1()
{
   if run_mulle_domain guess # 2> /dev/null
   then
      fail "empty guess unexpectedly succeded"
   fi
   log_info "Failed as expected"

   log_verbose "----- #1 PASSED -----"

   result="`run_mulle_domain nameguess /name`"
   expect_output "${result}" "name"
   log_verbose "----- #2 PASSED -----"

   result="`run_mulle_domain nameguess https://www.mulle-kybernetik.com/foo.git`"
   expect_output "${result}" "foo"
   log_verbose "----- #3 PASSED -----"

   result="`run_mulle_domain nameguess https://www.mulle-kybernetik.com/foo`"
   expect_output "${result}" "foo"
   log_verbose "----- #4 PASSED -----"

   result="`run_mulle_domain nameguess githost:foo`"
   expect_output "${result}" "foo"
   log_verbose "----- #5 PASSED -----"

   result="`run_mulle_domain nameguess -s tar https://www.mulle-kybernetik.com/foo.tar`"
   expect_output "${result}" "foo"
   log_verbose "----- #6 PASSED -----"

   result="`run_mulle_domain nameguess -s tar https://www.mulle-kybernetik.com/foo.tar.gz`"
   expect_output "${result}" "foo"
   log_verbose "----- #7 PASSED -----"

   result="`run_mulle_domain nameguess -s tar https://www.mulle-kybernetik.com/foo-1.2.1.tar.gz`"
   expect_output "${result}" "foo"
   log_verbose "----- #8 PASSED -----"

   result="`run_mulle_domain nameguess -s tar https://github.com/mulle-nat/mulle-c11/archive/1.3.5.tar.gz`"
   expect_output "${result}" "mulle-c11"
   log_verbose "----- #9 PASSED -----"

   result="`run_mulle_domain nameguess -s zip https://github.com/mulle-nat/mulle-c11/archive/1.3.5.zip`"
   expect_output "${result}" "mulle-c11"
   log_verbose "----- #10 PASSED -----"

   result="`run_mulle_domain nameguess -s symlink /github.com/mulle-nat/mulle-c11/archive/1.3.5.zip`"
   expect_output "${result}" "1.3.5.zip"
   log_verbose "----- #11 PASSED -----"

}


run_test2()
{
   if run_mulle_domain typeguess 2> /dev/null
   then
      fail "empty typeguess unexpectedly succeded"
   fi
   log_verbose "----- #12 PASSED -----"

   result="`run_mulle_domain typeguess /name`"
   expect_output "${result}" "local"
   log_verbose "----- #13 PASSED -----"

   result="`run_mulle_domain typeguess "https://www.mulle-kybernetik.com/foo.git" `"
   expect_output "${result}" "git"
   log_verbose "----- #14 PASSED -----"

   result="`run_mulle_domain typeguess "https://www.mulle-kybernetik.com/foo" `"
   expect_output "${result}" "git"
   log_verbose "----- #15 PASSED -----"

   result="`run_mulle_domain typeguess "githost:foo" `"
   expect_output "${result}" "git"
   log_verbose "----- #16 PASSED -----"

   result="`run_mulle_domain typeguess "https://www.mulle-kybernetik.com/foo.tar" `"
   expect_output "${result}" "tar"
   log_verbose "----- #17 PASSED -----"

   result="`run_mulle_domain typeguess "https://github.com/mulle-nat/mulle-c11/archive/1.3.5.tar.gz?whatever" `"
   expect_output "${result}" "tar"
   log_verbose "----- #18 PASSED -----"

   result="`run_mulle_domain typeguess "https://github.com/mulle-nat/mulle-c11/archive/1.3.5.zip" `"
   expect_output "${result}" "zip"
   log_verbose "----- #19 PASSED -----"

   result="`run_mulle_domain typeguess "idonotexisthere" `"
   expect_output "${result}" "none"
   log_verbose "----- #20 PASSED -----"
}


main()
{
   MULLE_DOMAIN_FLAGS="$@"

   _options_mini_main "$@" && set -x

   run_test1
   run_test2

   log_info "----- ALL PASSED -----"
}


init()
{
   MULLE_DOMAIN="${MULLE_DOMAIN:-${PWD}/../../mulle-domain}"
}


init "$@"
main "$@"
