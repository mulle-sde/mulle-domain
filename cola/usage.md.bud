## Commands

### commit-for-tag

Get the commit identifier (usually the sha hash) of a repository for the
given tag:

``` sh
mulle-domain commit-for-tag https://github.com/mulle-c/mulle-c11 latest
```


### compose-url

Create an URL to download the version 1.0.0 archive from gitlab of the
project bar of user foo:

``` sh
mulle-domain compose-url --tag 1.0.0 --user foo --repo bar gitlab
```


### list

List known domains:

``` sh
mulle-domain list
```


### nameguess

Given an URL guess the proper name of the project:


``` sh
mulle-domain nameguess https://github.com/mulle-c/mulle-c11.git
```

In this case it would be `mulle-c11`. Can fail miserably for unknown domains.

### parse-url

Breaks an URL apart into the constituent parts of interest for a mulle-sde
dependency:

``` sh
mulle-domain parse-url https://github.com/mulle-c/mulle-c11.git
```

### tag-aliases

Find tags that reference the same commit:


``` sh
mulle-domain tag-aliases https://github.com/mulle-c/mulle-c11.git latest
```

By default, it will only list semantic version (semver) compatible tags.

### tags

List available tags:

``` sh
mulle-domain tags https://github.com/mulle-c/mulle-c11.git
```

By default, it will only list semantic version (semver) compatible tags.


### tags-for-commit

List all tags for a given the commit identifier:

``` sh
mulle-domain tags-for-commit https://github.com/mulle-c/mulle-c11.git e8dfhf
```
By default, it will only list semantic version (semver) compatible tags. The
commit identifier can not be shortened.


### tags-with-commits

Lists all tags with the corresponding hashes:

``` sh
mulle-domain tags-with-commits https://github.com/mulle-c/mulle-c11.git e8dfhf
```



### typeguess


Given an URL guess the source code management (scm) employed:

``` sh
mulle-domain typeguess https://github.com/mulle-c/mulle-c11.git
```
Usually the result will be `git` or `tar`. But it can also be `zip` or `svn`.


